{"version":3,"sources":["location.js"],"names":[],"mappingsfile":"location.js","sourcesContent":["  var placeSearch, autocomplete;\n  \n  var componentForm = {\n    street_number: 'short_name',\n    route: 'long_name',\n    locality: 'long_name',\n    administrative_area_level_1: 'short_name',\n    country: 'long_name',\n    postal_code: 'short_name',\n    administrative_area_level_2: 'long_name'\n  };\n\n  var input = document.getElementById('get-location-address');\n\n  $(document).ready(function() {\n\n      var lat = document.getElementById('latitude').value;\n      var lng = document.getElementById('longitude').value;\n\n      if(lat != '' && lng != '') {\n        var center = {lat: parseFloat(lat), lng: parseFloat(lng)};\n      } else {\n        var center = {lat: 16.054831, lng: 108.201169};\n      }\n\n      var map = new google.maps.Map(document.getElementById('map'), {\n        center: center,\n        zoom: 14,\n        scrollwheel: false,\n      });\n      var geocoder = new google.maps.Geocoder();\n\n      $('#get-location-address').keyup(function() {\n        setTimeout( function () {\n          geocodeAddress(geocoder, map);\n        }, 3000);\n      });\n\n      var marker = new google.maps.Marker({\n          map: map,\n          draggable:true,\n          position: center,\n      });\n\n\n      var autocomplete = new google.maps.places.Autocomplete(\n          input, {types: ['geocode']}\n      );\n\n      autocomplete.bindTo('bounds', map);\n\n      autocomplete.addListener('place_changed', function () {\n          \n          marker.setVisible(false);\n\n          var place = autocomplete.getPlace();\n\n          if (!place.geometry) {\n              geocodeAddress(geocoder, map);\n          } else {\n              setAtt(place);\n          }\n\n          if (place.geometry.viewport) {\n            map.fitBounds(place.geometry.viewport);\n            map.setZoom(14);\n          } else {\n            map.setCenter(place.geometry.location);\n            map.setZoom(14);\n          }\n\n          marker.setPosition(place.geometry.location);\n\n          marker.setVisible(true);\n\n          var address = '';\n\n          if (place.address_components) {\n            address = [\n            (place.address_components[0] && place.address_components[0].short_name || ''),\n            (place.address_components[1] && place.address_components[1].short_name || ''),\n            (place.address_components[2] && place.address_components[2].short_name || '')\n            ].join(' ');\n            GetLocation(input.value);\n          }\n\n      });\n\n      google.maps.event.addListener(marker, 'dragend', function() \n      {\n          var ps = marker.getPosition();\n          var latlng = {lat: parseFloat(ps.lat()), lng: parseFloat(ps.lng())};\n          var geocoder = new google.maps.Geocoder();\n            geocoder.geocode({'location': latlng}, function(results, status) {\n              if (status === 'OK') {\n                input.value = results[1].formatted_address;\n                GetLocation(results[1].formatted_address);\n                setAtt(results[1]);\n              }\n          });\n      });\n\n  });\n\n  function geocodeAddress(geocoder, resultsMap) {\n    var address = document.getElementById('get-location-address').value;\n    geocoder.geocode({'address': address}, function(results, status) {\n      if (status === 'OK') {\n        resultsMap.setCenter(results[0].geometry.location);\n        var latitude = results[0].geometry.location.lat();\n        var longitude = results[0].geometry.location.lng();\n        document.getElementById(\"latitude\").value = latitude;\n        document.getElementById(\"longitude\").value = longitude;\n      } else {\n        console.log('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n  }\n\n  function GetLocation(id) {\n    var geocoder = new google.maps.Geocoder();\n    var _address = id;\n\n    geocoder.geocode({ 'address': _address }, function (results, status) {\n        if (status == google.maps.GeocoderStatus.OK) {\n            var latitude = results[0].geometry.location.lat();\n            var longitude = results[0].geometry.location.lng();\n            document.getElementById(\"latitude\").value = latitude;\n            document.getElementById(\"longitude\").value = longitude;\n        } else {\n            alert(\"Không thể tìm thấy vị trí bạn yêu cầu.\")\n        }\n    });\n  }\n\n\n  function setAtt(place) {\n      for (var i = 0; i < place.address_components.length; i++) {\n          var addressType = place.address_components[i].types[0];\n          if (componentForm[addressType]) {\n              var val = place.address_components[i][componentForm[addressType]];\n              document.getElementById(addressType).value = val;\n          }\n      }\n  }"],"sourceRoot":"/source/"}